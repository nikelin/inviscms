#summary Работа с событиями системы.
#labels Featured,Phase-Implementation,Phase-Design

== Обзор= =

Работа с собыятими в системе представлены двумя сущностями - событием ввиде объекта `*logs_event*`, и объектом менеджером событий - `*logs_controller*`.

Объект `*logs_event*` создаётся каждый раз, когда есть необходимость добавления некоторого информаицонного сообщения к истории системы.

Объект события имеет следующую спецификацию:

{{{

Событие :{
    Поля : {
      идентификатор,
      суть_собыятия,                                                 ; Заголовок события
      текст_события,                     
      время_события,                                                 ; В формате UNIX_TIMESTAMP
      автор,                                                                  ; Указатель на модуль либо пакет, в контексте корого было создано событие
      состояние_среды                                              ; Состояние среды, на момент вызова конструктора объекта события
    },
    Методы : {
        @ Публичные
        получить_значение (поле):Строка               ; получение значения указанного в качестве аргумента поля, в текущем объекте события
        задать_значение( поле , значение ):Булев ; установка значения некоторому полю текущего объекта события   
    }
}

}}}

Для произведения определённого рода операций над событиями, существует объект - менеджер событий:

{{{

МенеджерСобытий : {
    Поля : {
        метод_вывода,                                                   ; ( 'файл' , 'email' , 'одновременно' )
        метод_сохранения,                                            ; ( 'один_файл' , 'разные_файлы')
        маска_имени,                                                      ; маска именования файла для записи результирующих данных ('(.)*(%<?php ?>%)*(.)*')
        граничный_объём_истории,                             ; максимальный размер общей истории событий
        функция_сжатия,                                               ; функция, по методу которой будет происходит сжатие результатов (имя функции либо NULL)
    },
    Методы : {

       @ Защищённые методы :

        отправить_уведомление():Булев,                                ; Если метод вывода в значении `email` либо `одновременно`
        сохранить_событие():Булев,                                         ; Если метод вывода в значении `файл` либо  `одновременно`
        сгенерировать_имя():Строка,                                         ; Сгенерировать имя для текущего события (если значение метода сохранения в `разные_файлы`) на основании маски имени
        сжать_данные():Строка,                                                  ; Сжать данные по-методу функции `функция_сжатия()`
        очистить_историю():Булев,                                           ; Если значение размера буффера истории более, нежели `граничный_объём_истории`
        размер_буффера_истории():Число   
 
        @ Публичные методы:        
       
        новое_событие ( Событие ):Булев,                               ; Начать проводку нового события, переданного в качестве параметра Событие
        прочесть_событие ( идентификатор ):Событие         ; Получить объект уже созданного ранее события
                      
    }
}

}}}


По-умолчанию, события сохраняются в директории *{%ROOT_DIR%}/lib/temp/logs*. Данный путь прописывается в основной конфигурационный файл (*{%ROOT_DIR%}/config.xml*), в котором он может быть измененён.





 